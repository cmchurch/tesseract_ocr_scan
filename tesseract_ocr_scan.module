<?php
function tesseract_ocr_scan_menu() {
/*THIS FUNCTION HOOKS INTO drupal_menu TO ADD A TAB THAT DEFINES THE start_scan FUNCTION*/
	$items['node/%node/tesseract_ocr_scan'] = array(
	    'title' => 'Scan',
	    'access arguments' => array('access content'),
	    'page callback' => 'tesseract_ocr_scan_start_scan',
	    'page arguments' => array(1),
	    'type' => MENU_LOCAL_TASK,
	  );
	 return $items;
}

function tesseract_ocr_scan_start_scan($node) {
	$file = file_load($node->field_file['und'][0]['fid']);
	$filepath = drupal_realpath($file->uri);
	$temp_path = tesseract_ocr_scan_convert_pdf($filepath);
	$scan = tesseract_ocr_scan_scan($temp_path);
	
	//REMOVE ALL UNNECESSARY LINE BREAKS (Newlines followed by alphanumeric characters)	
	$scan = preg_replace("/\n(?=\w)/",' ',$scan);
	//REMOVE UNNECESSARY HYPHENATION (hyphens followed by spaces)
	$scan = preg_replace("/-\s(?=\w)/",'',$scan);
	
	$node->field_ocr_text[$node->language][0]['value']= $scan;
	field_attach_update('node', $node);
	drupal_goto('node/'.$node->nid);

}


function tesseract_ocr_scan_convert_pdf($filepath) {
	$convert_path = file_directory_temp() . "/tesseract_ocr_drupal/";
	if (!file_exists($convert_path)) {
	    mkdir($convert_path, 0777, true);
	}
	$im = new imagick();
	$im->setResolution(400,400);
	$im->readimage($filepath); 
	$im->setImageFormat('jpg');
	//$im->setImageAlphaChannel(Imagick::ALPHACHANNEL_OPAQUE);
	foreach($im as $i=>$image)	{
		$im->writeImage($convert_path."page".$i.".jpg"); 
	}
	$im->clear(); 
	$im->destroy();
	return $convert_path;
}

function tesseract_ocr_scan_scan($temp_path) {
	$command = "for i in ".$temp_path."*.jpg ; do cat \$i | tesseract stdin stdout; done;";
	$scan = shell_exec($command);
	$remove_temp = "rm -r ".$temp_path;
	shell_exec($remove_temp);
	return $scan;
}



/*NOT USED*/

function tesseract_ocr_scan_go_batch($node) {
	 $batch = array(
	    'operations' => array('tesseract_ocr_scan_test', array('node'=> $node)),
	    'finished' => 'tesseract_ocr_scan_batch_finished', // runs after batch is finished
	    'title' => t('Scanning............'),
	    'init_message' => t('Scan is starting.'),
	    'error_message' => t('Import has encountered an error.'),
 	 );
	batch_set($batch);
	batch_process('node/'.$node->nid);
}

function tesseract_ocr_scan_batch_finished($success,$results,$operations) {
drupal_set_message($results);
}

function _tesseract_ocr_scan_test($node) {
	$file = file_load($node->field_file['und'][0]['fid']);
	$filepath = drupal_realpath($file->uri);
	$context['message'] = t('Processing image %filepath', array('%filepath' => $filepath));

}
?>
